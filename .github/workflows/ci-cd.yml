name: CI/CD Pipeline for Hasher Library (JitPack)

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build_and_test:
    name: Build & Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Project with Maven
        run: mvn clean package

      - name: Run Unit Tests
        run: mvn test

  security_scan:
    name: Security & Dependency Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@1.1.0
        with:
          project: "HasherLibrary"
          path: "."
          format: "HTML"
          output: "dependency-check-report"

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: Security Report
          path: dependency-check-report.html

  enforce_private_classes:
    name: Verify Internal Classes are Hidden
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Check for Public Class Violations
        run: |
          if grep -R "public class HasherService" src/main/java/; then
            echo "ERROR: Hasher must be package-private!"
            exit 1
          fi
          if grep -R "public class Const" src/main/java/; then
            echo "ERROR: Const must be package-private!"
            exit 1
          fi
        shell: bash

  publish_to_jitpack:
    name: Publish to JitPack
    runs-on: ubuntu-latest
    needs: [build_and_test, security_scan, enforce_private_classes]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Publish to JitPack
        run: echo "New Version Available for JitPack!"
  create_github_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [publish_to_jitpack]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "**Add release notes manually on GitHub**"
          draft: false
          prerelease: false